#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

name: PreCommit Spotless

on:
  push:
    tags: ['v*']
    branches: ['master', 'release-*']
    paths:
      - 'buildSrc/**'
      - 'sdks/java/**'
      - 'runners/**'
      - 'examples/java/**'
      - 'examples/kotlin/**'
      - '.test-infra/jenkins/'
      - '.github/workflows/beam_PreCommit_Spotless.yml'
  pull_request_target:
    branches: ['master', 'release-*']
    paths:
      - 'buildSrc/**'
      - 'sdks/java/**'
      - 'runners/**'
      - 'examples/java/**'
      - 'examples/kotlin/**'
      - '.test-infra/jenkins/'
  issue_comment:
    types: [created]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.sha || github.head_ref || github.ref }}-${{ github.event.sender.login }}-${{ github.event.schedule }}'
  cancel-in-progress: true

#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
  actions: write
  pull-requests: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: read
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

env:
  TAG: $(date +'%Y%m%d-%H%M%S%N')

jobs:
  beam_PreCommit_Spotless:
    name: ${{matrix.job_name}} (${{matrix.job_phrase}} ${{matrix.java_version}})
    timeout-minutes: 120
    runs-on: [self-hosted, ubuntu-20.04, main]
    strategy:
      fail-fast: false
      matrix:
        job_name: [beam_PreCommit_Spotless]
        job_phrase: [Run Spotless PreCommit]
        java_version: ['11']
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      github. event_name == 'workflow_dispatch' ||
      startswith(github.event.comment.body, 'Run Spotless PreCommit')
    steps:
      - name: Setup repository
        uses: actions/checkout@v3
        with:
          comment_phrase: ${{ matrix.job_phrase }} ${{matrix.java_version}}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }}) ${{matrix.java_version}}
      - name: Set up Java${{ matrix.java_version }}
        uses: actions/setup-java@v3.8.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
      - name: run Spotless PreCommit script
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: clean build spotlessCheck clean build checkStyleMain clean build checkStyleTest
          arguments: |
            -PcompileAndRunTestsWithJava11 \
            -Pjava11Home=$JAVA_HOME_11_X64 \
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: java-code-coverage-report
          path: "**/build/reports/checkstyle/*.xml"